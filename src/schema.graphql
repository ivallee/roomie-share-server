# import ExpenseShare from './generated/prisma.graphql'

type Query {
  # do I need these?
  allUsers: [User!]!
  allGroups: [Group!]!
  getUserById(userId: String!): User!
  getUserByEmail(email: String!): User!
}

type Mutation {
  signup(email: String! password: String! name: String!): AuthPayload
  login(email: String! password: String!): AuthPayload
  newGroup(name: String!): Group!
  addToGroup(email: String! groupId: String!): Group!
  removeFromGroup(email: String! groupId: String!): Group!
  leaveGroup(groupId: String!): Group!
  newExpense(
    groupId: String!
    amount: Int! 
    description: String!
    participants: [ExpenseParticipantInput!]!
    ): Expense!
}

input ExpenseParticipantInput {
  share: Float!
  userId: String!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  groups: [Group!]!
}

type Group {
  id: ID!
  name: String!
  users: [User!]!
  expenses: [Expense!]!
  createdBy: User!
}

type Expense {
  id: ID!
  amount: Int!
  description: String!
  paidBy: User!
  perPerson: Float!
  group: Group!
}